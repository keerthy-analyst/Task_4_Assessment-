# -*- coding: utf-8 -*-
"""Assessment2B.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v70ze6FzY9HfuWOtPwUVgP2op4xjBqw5

###### Assessment

###### I am going to provide two .csv files , you are supposed to work on them and have to provide solutions to the following problems

###### import necessary libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

"""###### merge those two csv files (after getting as dataframes, get them as a single dataframe)"""

df1 = pd.read_csv('/content/college_1.csv')
df2 = pd.read_csv('/content/college_2.csv')
df = pd.concat([df1,df2])

"""###### Take each csv file , split that csv file into multiple categories (example csv files are added in the repo)

###### consider if the codekata score exceeds 15000 points(present week) then make a csv on those observations as Exceeded expectations.csv

###### if  10000<codekata score<15000   (Reached_expectations.csv)

###### if  7000<codekata score<10000   (Needs_Improvement.csv)

###### if  codekate score < 7000        (Unsatisfactory.csv)
"""

c1 = df[df["CodeKata Score"]>= 15000]
c2 = df[(df["CodeKata Score"]>= 10000) & (df["CodeKata Score"] < 15000)]
c3 = df[(df["CodeKata Score"]>= 7000) & (df["CodeKata Score"] < 10000)]
c4 = df[df["CodeKata Score"]< 7000]

c1.to_csv("Exceeded expectations.csv", index = False)
c2.to_csv("Reached_expectations.csv", index = False)
c3.to_csv("Needs_Improvement.csv", index = False)
c4.to_csv("Unsatisfactory.csv", index = False)

"""###### Average of previous week geekions vs this week geekions (i.e Previous Geekions vs CodeKata Score)"""

#Average of previous week geekions
avg1 = df["Previous Geekions"].mean()
#Average of this week geekions
avg2 = df['CodeKata Score'].mean()
print(avg1,avg2)

"""###### No of students participated """

print("Number of students participated ---->", df['Name'].count())

"""###### #Average completion of python course or my_sql or python english or computational thinking"""

print("Average completion of python course --->",df['python'].mean())
print("Average completion of my_sql course --->",df['mysql'].mean())
print("Average completion of python eng course --->",df['python_en'].mean())
print("Average completion of computational thinking course --->",df['computational_thinking'].mean())

"""###### rising star of the week (top 3 candidate who performed well in that particular week)"""

df.sort_values(by=['Rising','Name'], ascending= False).head(3)

"""###### Shining stars of the week (top 3 candidates who has highest geekions)"""

df.sort_values(by=['CodeKata Score', 'Name'], ascending= False).head(3)

"""###### Department wise codekata performence (pie chart)"""

x = df.groupby(['Department'])['CodeKata Score'].sum()
y = df['Department'].unique()
plt.pie(x, labels = y)
plt.show

"""###### Department wise toppers (horizantal bar graph or any visual representations of your choice)"""

new_df = df.groupby(['Department'])[['CodeKata Score','Name']].max()
x = new_df['Name']
y = new_df['CodeKata Score']
plt.scatter(x,y, linewidths = 1.5, edgecolors='#58FF5B')
plt.show()





